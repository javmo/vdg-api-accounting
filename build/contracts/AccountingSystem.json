{
  "contractName": "AccountingSystem",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AccountingToken",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accountAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountTypes",
      "outputs": [
        {
          "internalType": "enum AccountingSystem.AccountType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accounts",
      "outputs": [
        {
          "internalType": "contract IAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_accountName",
          "type": "string"
        }
      ],
      "name": "createAssetAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_accountName",
          "type": "string"
        }
      ],
      "name": "createLiabilityAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_accountName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isExpense",
          "type": "bool"
        }
      ],
      "name": "createResultAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "getAccountDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum AccountingSystem.AccountType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_newAccountName",
          "type": "string"
        }
      ],
      "name": "updateAccountName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAccountDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "accountAddress",
              "type": "address"
            },
            {
              "internalType": "enum AccountingSystem.AccountType",
              "name": "accountType",
              "type": "uint8"
            }
          ],
          "internalType": "struct AccountingSystem.AccountDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "getAccountInstance",
      "outputs": [
        {
          "internalType": "contract IAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AccountingToken\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountTypes\",\"outputs\":[{\"internalType\":\"enum AccountingSystem.AccountType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_accountName\",\"type\":\"string\"}],\"name\":\"createAssetAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_accountName\",\"type\":\"string\"}],\"name\":\"createLiabilityAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_accountName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isExpense\",\"type\":\"bool\"}],\"name\":\"createResultAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"getAccountDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AccountingSystem.AccountType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"getAccountInstance\",\"outputs\":[{\"internalType\":\"contract IAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAccountDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"accountAddress\",\"type\":\"address\"},{\"internalType\":\"enum AccountingSystem.AccountType\",\"name\":\"accountType\",\"type\":\"uint8\"}],\"internalType\":\"struct AccountingSystem.AccountDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_newAccountName\",\"type\":\"string\"}],\"name\":\"updateAccountName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Este contrato permite la gesti\\u00f3n de cuentas de activos y resultados.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor que establece el propietario del contrato.\"},\"createAssetAccount(address,string)\":{\"details\":\"Crea una nueva instancia de AssetAccount y la almacena en el mapping.\",\"params\":{\"_accountAddress\":\"La direcci\\u00f3n que se utilizar\\u00e1 como clave para la cuenta.\",\"_accountName\":\"El nombre de la cuenta.\"}},\"createLiabilityAccount(address,string)\":{\"details\":\"Crea una nueva instancia de LiabilityAccount y la almacena en el mapping.\",\"params\":{\"_accountAddress\":\"La direcci\\u00f3n que se utilizar\\u00e1 como clave para la cuenta.\",\"_accountName\":\"El nombre de la cuenta.\"}},\"createResultAccount(address,string,bool)\":{\"details\":\"Crea una nueva instancia de ResultAccount y la almacena en el mapping.\",\"params\":{\"_accountAddress\":\"La direcci\\u00f3n que se utilizar\\u00e1 como clave para la cuenta.\",\"_accountName\":\"El nombre de la cuenta.\",\"_isExpense\":\"Indica si la cuenta es de gastos o ingresos.\"}},\"getAccountDetails(address)\":{\"details\":\"Retorna la direcci\\u00f3n del contrato de la cuenta y el tipo de cuenta.\",\"params\":{\"_accountAddress\":\"La direcci\\u00f3n de la cuenta a consultar.\"},\"returns\":{\"_0\":\"La direcci\\u00f3n del contrato de la cuenta y el tipo de cuenta.\"}},\"getAccountInstance(address)\":{\"details\":\"Retorna la instancia del contrato de una cuenta espec\\u00edfica.\",\"params\":{\"_accountAddress\":\"Direccion asociada a la cuenta contable\"},\"returns\":{\"_0\":\"La direcci\\u00f3n del contrato de la cuenta.\"}},\"getAllAccountDetails()\":{\"details\":\"Retorna un array de direcciones de cuentas de activos o pasivos o resultados seg\\u00fan el par\\u00e1metro.\",\"returns\":{\"_0\":\"Un array de direcciones de cuentas y un array de tipos de cuentas.\"}},\"updateAccountName(address,string)\":{\"details\":\"Actualiza el nombre de la cuenta en la instancia del contrato de la cuenta.\",\"params\":{\"_accountAddress\":\"La direcci\\u00f3n de la cuenta a actualizar.\",\"_newAccountName\":\"El nuevo nombre para la cuenta.\"}}},\"title\":\"AccountingSystem\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAssetAccount(address,string)\":{\"notice\":\"Crea una nueva cuenta de activos.\"},\"createLiabilityAccount(address,string)\":{\"notice\":\"Crea una nueva cuenta de Pasivo.\"},\"createResultAccount(address,string,bool)\":{\"notice\":\"Crea una nueva cuenta de resultados.\"},\"getAccountDetails(address)\":{\"notice\":\"Obtiene los detalles de una cuenta espec\\u00edfica.\"},\"getAccountInstance(address)\":{\"notice\":\"Obtiene la instancia del contrato de una cuenta.\"},\"getAllAccountDetails()\":{\"notice\":\"Obtiene todas las direcciones de cuentas de activos o pasivos o resultados.\"},\"updateAccountName(address,string)\":{\"notice\":\"Actualiza el nombre de una cuenta.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/accountingSystem/AccountingSystem.sol\":\"AccountingSystem\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/accountingSystem/AccountingSystem.sol\":{\"keccak256\":\"0x45f694f7d97476c2dfd1701b64e17bbfa8bb7122643cae5db3b2373537cd04cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1219b40abce7d1d72cb75d809e512914039eebf89d55f00cbd9887ea86e7537\",\"dweb:/ipfs/QmbF5VGqraSti8FGbBYFk91QuN4mfAyKHLDiaG8zP4pVMs\"]},\"project:/contracts/accountingSystem/AssetAccount.sol\":{\"keccak256\":\"0x283c4b609b0186ed599b4277f29cb1be9f83d09c5a47e0f21e33f1686c87ba31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4558fda587465c43b4b281e95e84befdd1877a3f1bdcdbe4882f83b94bb2a98\",\"dweb:/ipfs/QmcQ8Fo1Ch4qN3uXoHvzNjkMuun6JabJrgZsQ5r1cKvHvb\"]},\"project:/contracts/accountingSystem/IAccount.sol\":{\"keccak256\":\"0x7d2b1f771ba40fc0ae50d1ab367d6b718d001117537d33805df3b04b3e8b523b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://156e418c1da01e0315c112ef6e8411da5a9a2acdde824b1f9ded01e6847e74ee\",\"dweb:/ipfs/QmSNP9PEszEVBGv4j12hGSqUHDCRK3p7DzAzdAqy43ayEb\"]},\"project:/contracts/accountingSystem/LiabilityAccount.sol\":{\"keccak256\":\"0x2d3f9f08874e24c2bb6468c7b38fcac61715f72a874e8e077a3a25504284ec54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88bee5a7b2dc4d443f70e104e9fe2c62e0232244a887ef9e43c49e0a89b19d0b\",\"dweb:/ipfs/QmePzPYhHAMsa4wpuxj2TJ9QBpra2SWyDoM2DAgDAWsWEH\"]},\"project:/contracts/accountingSystem/ResultAccount.sol\":{\"keccak256\":\"0x888199c004e432ad5176fd38956c9490409a4ab0c3fdbf549dbf77a56a9841c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ab84b5f51da90e5473fe8fe5295f46c2a6e1198a934851406123108c7e70c06\",\"dweb:/ipfs/QmepffeMi9tbUzxDsZqMQo4ovxwSNpGWm5DdtbFPCfTJyL\"]},\"project:/contracts/tokens/AccountingToken.sol\":{\"keccak256\":\"0x04e9150cc9fd37b565b5ab7b4b9021a555303726d32a0d08fc7e8925a78b85fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9013925220d5e004d90aa5694b9791c5c12db0540df49d3f5a2d43d0bdddd90\",\"dweb:/ipfs/QmSQkGkoreCzDSCUKkeGrgPWe7ZdUUJteXrbbVSntP7sp5\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:350:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "119:229:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "174:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "182:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "140:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "149:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "136:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "136:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "161:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "132:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "132:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "129:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "200:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "219:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "213:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "204:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "292:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "301:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "309:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "294:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "294:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "294:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "251:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "262:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "277:3:20",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "282:1:20",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "273:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "273:11:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "286:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "269:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "269:19:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "258:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "258:31:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "248:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "248:42:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "241:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:50:20"
                  },
                  "nodeType": "YulIf",
                  "src": "238:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "327:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "337:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "327:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_AccountingToken_$2636_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "85:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "96:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "108:6:20",
                "type": ""
              }
            ],
            "src": "14:334:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_AccountingToken_$2636_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8464:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:20",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:20",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:20"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:20"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:20",
                "type": ""
              }
            ],
            "src": "14:175:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "249:658:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "298:24:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "307:5:20"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "314:5:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "300:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "300:20:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "300:20:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "277:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "285:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "273:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "273:17:20"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "292:3:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "269:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "269:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "262:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "262:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "259:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "331:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "354:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "341:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:20:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "335:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "370:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "380:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "374:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "421:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "423:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "413:2:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "417:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "410:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "407:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "452:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "472:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "466:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "456:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:69:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "510:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "526:2:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "530:4:20",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "522:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "522:13:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "541:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:7:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "518:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "518:27:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:40:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:51:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "488:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "612:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "614:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "614:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "614:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "571:10:20"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "583:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "568:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "591:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "603:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "588:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "588:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "565:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "562:2:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "650:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "654:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "643:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "643:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "681:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "689:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "674:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "674:18:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "740:24:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "749:5:20"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "756:5:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "742:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "742:20:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "742:20:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "715:6:20"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "723:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "711:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "711:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "728:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "707:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "707:26:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "735:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "704:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "701:2:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "790:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "798:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "809:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "817:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:17:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "824:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "773:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:54:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:54:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "851:6:20"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "859:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "847:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "847:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "864:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "843:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:26:20"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "871:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "836:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "836:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "886:15:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "895:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "886:5:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "223:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "231:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "239:5:20",
                "type": ""
              }
            ],
            "src": "194:713:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "982:128:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1028:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1037:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1045:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1030:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1030:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1030:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1003:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1012:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "999:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "999:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1024:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "995:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "995:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "992:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1063:41:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1094:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1073:20:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:31:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1063:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "948:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "959:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "971:6:20",
                "type": ""
              }
            ],
            "src": "912:198:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1212:323:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1258:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1267:6:20"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1275:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1260:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1260:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1260:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1233:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1242:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1229:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1229:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1254:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1225:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1225:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1222:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1293:41:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1324:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1303:20:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1303:31:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1293:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1343:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1374:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1385:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1370:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1357:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1357:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1347:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1432:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1441:6:20"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1449:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1434:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1434:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1434:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1404:6:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1412:18:20",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1401:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1401:30:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1398:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1467:62:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1501:9:20"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1512:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:22:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1521:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1477:19:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:52:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1467:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1170:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1181:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1193:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1201:6:20",
                "type": ""
              }
            ],
            "src": "1115:420:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1651:480:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1697:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1706:6:20"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1714:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1699:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1699:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1699:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1672:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1681:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1668:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1668:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1693:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1664:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1664:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1661:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1732:41:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1763:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1742:20:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1742:31:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1782:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1813:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1824:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1809:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1809:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1796:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1796:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1786:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1871:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1880:6:20"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1888:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1873:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1873:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1873:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1843:6:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1851:18:20",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1840:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1840:30:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1837:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1906:62:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1940:9:20"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1951:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1936:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1936:22:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1960:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1916:19:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1916:52:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1906:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1977:45:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2007:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2018:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1990:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1990:32:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1981:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2075:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2084:6:20"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2092:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2077:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2077:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2077:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2044:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2065:5:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2058:6:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2058:13:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2051:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2051:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2041:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2041:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2034:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2034:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2031:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2110:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2120:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2110:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1601:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1612:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1624:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1632:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1640:6:20",
                "type": ""
              }
            ],
            "src": "1540:591:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2206:120:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2252:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2261:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2269:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2254:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2254:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2254:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2227:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2236:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2223:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2223:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2248:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2219:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2219:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2216:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2287:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2310:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2297:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2297:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2287:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2172:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2183:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2195:6:20",
                "type": ""
              }
            ],
            "src": "2136:190:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2387:186:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2429:111:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2450:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2457:3:20",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2462:10:20",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2453:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2453:20:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2443:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2443:31:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2443:31:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2494:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2497:4:20",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2487:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2487:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2487:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2522:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2525:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2515:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2515:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2515:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2410:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2417:1:20",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2407:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2407:12:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2400:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:20:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2397:2:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2556:3:20"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2561:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2549:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2549:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2549:18:20"
                }
              ]
            },
            "name": "abi_encode_t_enum$_AccountType",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2371:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2378:3:20",
                "type": ""
              }
            ],
            "src": "2331:242:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2630:426:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2640:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2660:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2654:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2654:12:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2644:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2682:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2687:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2675:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2675:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2675:19:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2703:12:20",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2712:3:20"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2707:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2776:110:20",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2790:14:20",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2800:4:20",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2794:2:20",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2832:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2837:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2828:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2828:11:20"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2841:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2824:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2824:20:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2860:5:20"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2867:1:20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2856:3:20"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2856:13:20"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2871:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2852:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2852:22:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2846:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2846:29:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2817:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2817:59:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2817:59:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2735:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2738:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2732:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2746:21:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2748:17:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2757:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2760:4:20",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2753:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2753:12:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2748:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2728:3:20",
                    "statements": []
                  },
                  "src": "2724:162:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2920:64:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2949:3:20"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2954:6:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2945:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2945:16:20"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2963:4:20",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2941:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2941:27:20"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "2970:3:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2934:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2934:40:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2934:40:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2901:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2904:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2898:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2898:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2895:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2993:57:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3008:3:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3021:6:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3029:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3017:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3017:15:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3038:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3034:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3034:7:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3013:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3013:29:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3004:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3004:39:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3045:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3000:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3000:50:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2993:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2607:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2614:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2622:3:20",
                "type": ""
              }
            ],
            "src": "2578:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3162:102:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3172:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3184:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3195:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3180:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3172:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3214:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3229:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3245:3:20",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3250:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3241:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3241:11:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3254:1:20",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3237:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3237:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3225:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3225:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3207:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3207:51:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3131:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3142:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3153:4:20",
                "type": ""
              }
            ],
            "src": "3061:203:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3411:169:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3421:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3433:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3444:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3429:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3429:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3421:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3463:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3478:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3494:3:20",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3499:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3490:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3490:11:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3503:1:20",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3486:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3486:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3474:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3474:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3456:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3456:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3456:51:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3547:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3559:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3570:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3555:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3555:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AccountType",
                      "nodeType": "YulIdentifier",
                      "src": "3516:30:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3516:58:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_AccountType_$797__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3372:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3383:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3391:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3402:4:20",
                "type": ""
              }
            ],
            "src": "3269:311:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3800:685:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3810:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3820:2:20",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3814:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3831:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3849:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3860:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3845:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3845:18:20"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3835:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3879:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3890:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3872:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3872:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3872:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3902:17:20",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "3913:6:20"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3906:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3928:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3948:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3942:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3942:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3932:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "3971:6:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3979:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3964:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3964:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3964:22:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3995:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4005:2:20",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3999:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4016:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4027:9:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4038:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4023:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4023:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4016:3:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4050:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4068:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4076:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4064:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4064:15:20"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4054:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4088:13:20",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "4097:4:20"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4092:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4159:300:20",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4173:23:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4189:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4183:5:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4183:13:20"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "4177:2:20",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4216:3:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4231:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4225:5:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4225:9:20"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4244:3:20",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4249:1:20",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "4240:3:20"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4240:11:20"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4253:1:20",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "4236:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4236:19:20"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4221:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4221:35:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4209:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4209:48:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4209:48:20"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4270:38:20",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4300:2:20"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4304:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4296:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4296:11:20"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4290:5:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4290:18:20"
                        },
                        "variables": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulTypedName",
                            "src": "4274:12:20",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "memberValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4352:12:20"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4370:3:20"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4375:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4366:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4366:12:20"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_enum$_AccountType",
                            "nodeType": "YulIdentifier",
                            "src": "4321:30:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4321:58:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4321:58:20"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4392:19:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4403:3:20"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "4408:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4399:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4399:12:20"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4392:3:20"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4424:25:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4438:6:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4446:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4434:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4434:15:20"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4424:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4121:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4124:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4118:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4132:18:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4134:14:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4143:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4146:1:20",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4139:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4139:9:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4134:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4114:3:20",
                    "statements": []
                  },
                  "src": "4110:349:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4468:11:20",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4476:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4468:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3769:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3780:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3791:4:20",
                "type": ""
              }
            ],
            "src": "3585:900:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4608:102:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4618:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4630:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4641:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4626:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4626:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4618:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4660:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4675:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4691:3:20",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4696:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4687:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4687:11:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4700:1:20",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4683:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4683:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4671:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4671:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4653:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4653:51:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IAccount_$1457__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4577:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4588:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4599:4:20",
                "type": ""
              }
            ],
            "src": "4490:220:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4829:100:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4839:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4851:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4862:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4847:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4847:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4839:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4905:6:20"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4913:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_AccountType",
                      "nodeType": "YulIdentifier",
                      "src": "4874:30:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4874:49:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4874:49:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_AccountType_$797__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4798:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4809:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4820:4:20",
                "type": ""
              }
            ],
            "src": "4715:214:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5055:101:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5072:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5083:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5065:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5065:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5065:21:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5095:55:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5123:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5135:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5146:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5131:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5131:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5103:19:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5103:47:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5095:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5024:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5035:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5046:4:20",
                "type": ""
              }
            ],
            "src": "4934:222:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5338:243:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5355:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5366:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5348:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5348:21:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5378:55:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5406:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5418:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5429:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5414:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5414:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5386:19:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5386:47:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5378:4:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5442:29:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5460:3:20",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5465:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5456:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5456:11:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5469:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5452:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5452:19:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5446:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5491:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5502:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5487:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5487:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5511:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5519:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5507:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5507:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5480:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5480:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5480:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5543:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5554:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5539:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5539:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5563:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5571:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5559:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5559:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5532:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5532:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5532:43:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5291:9:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5302:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5310:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5318:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5329:4:20",
                "type": ""
              }
            ],
            "src": "5161:420:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5785:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5802:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5813:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5795:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5795:22:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5826:56:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5854:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5866:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5877:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5862:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5862:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5834:19:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5834:48:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5826:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5902:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5913:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5898:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5898:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5932:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5925:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5925:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5918:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5918:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5891:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5891:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5891:50:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5950:29:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5968:3:20",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5973:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5964:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5964:11:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5977:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5960:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5960:19:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5954:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5999:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6010:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5995:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5995:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "6019:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6027:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6015:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6015:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5988:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5988:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6051:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6062:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6047:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6047:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6071:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6079:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6067:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6067:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6040:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6040:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6040:43:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_bool_t_address_t_address__to_t_string_memory_ptr_t_bool_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5730:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5741:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5749:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5757:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5765:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5776:4:20",
                "type": ""
              }
            ],
            "src": "5586:503:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6268:231:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6285:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6296:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6278:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6278:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6278:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6319:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6330:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6315:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6315:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6335:2:20",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6308:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6308:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6308:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6358:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6369:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6354:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6354:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6374:34:20",
                        "type": "",
                        "value": "Account with this address alread"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6347:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6347:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6429:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6440:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6425:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6425:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6445:11:20",
                        "type": "",
                        "value": "y exists."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6418:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6418:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6418:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6466:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6478:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6489:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6474:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6474:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6466:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62da2f04961f780b5985651055c24bc4349ff45136fe5f2d0ceac482a60bcb87__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6245:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6259:4:20",
                "type": ""
              }
            ],
            "src": "6094:405:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6678:237:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6695:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6706:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6688:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6688:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6688:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6729:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6740:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6725:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6725:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6745:2:20",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6718:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6718:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6718:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6768:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6779:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6764:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6764:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6784:34:20",
                        "type": "",
                        "value": "ResultAccount with this address "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6757:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6757:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6757:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6839:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6850:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6835:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6835:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6855:17:20",
                        "type": "",
                        "value": "already exists."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6828:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6828:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6828:45:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6882:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6894:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6905:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6890:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6890:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6882:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8426699ecf76ac2b843be88db1a2da3cecf1ac7bff9d9714d543980a8116beae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6655:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6669:4:20",
                "type": ""
              }
            ],
            "src": "6504:411:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7094:229:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7111:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7122:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7104:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7104:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7104:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7145:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7156:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7141:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7141:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7161:2:20",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7134:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7134:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7134:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7184:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7195:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7180:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7180:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7200:34:20",
                        "type": "",
                        "value": "Only the owner can perform this "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7173:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7173:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7173:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7255:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7266:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7251:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7251:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7271:9:20",
                        "type": "",
                        "value": "action."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7244:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7244:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7244:37:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7290:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7302:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7313:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7298:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7298:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7290:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7071:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7085:4:20",
                "type": ""
              }
            ],
            "src": "6920:403:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7502:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7519:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7530:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7512:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7512:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7512:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7553:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7564:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7549:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7549:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7569:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7542:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7542:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7542:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7592:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7603:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7588:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7588:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7608:34:20",
                        "type": "",
                        "value": "LiabilityAccount with this addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7581:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7581:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7663:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7674:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7659:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7659:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7679:20:20",
                        "type": "",
                        "value": "ss already exists."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7652:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7652:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7652:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7709:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7721:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7732:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7717:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7717:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7709:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e8dbae96be62bbcc06f83f87757c5f93920caaa6d56fe1952a4aed401f51f656__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7479:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7493:4:20",
                "type": ""
              }
            ],
            "src": "7328:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7921:168:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7938:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7949:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7931:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7931:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7931:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7972:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7983:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7968:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7968:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7988:2:20",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7961:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7961:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7961:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8011:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8022:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8007:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8007:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8027:20:20",
                        "type": "",
                        "value": "Account not found."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8000:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8000:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8000:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8057:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8069:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8080:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8065:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8065:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8057:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7898:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7912:4:20",
                "type": ""
              }
            ],
            "src": "7747:342:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8141:189:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8180:115:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "8201:3:20"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8210:3:20",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8215:10:20",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8206:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8206:20:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8194:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8194:33:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8194:33:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8247:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8250:4:20",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8240:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8240:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8240:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "8275:3:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8280:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8268:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8268:17:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8268:17:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8157:5:20"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8168:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8164:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8164:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8154:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8154:17:20"
                  },
                  "nodeType": "YulIf",
                  "src": "8151:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8304:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8315:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8322:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8311:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8311:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8304:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8123:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8133:3:20",
                "type": ""
              }
            ],
            "src": "8094:236:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8367:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8384:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8391:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8396:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8387:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8387:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8377:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8377:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8377:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8424:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8427:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8417:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8417:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8417:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8448:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8451:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8441:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8441:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8441:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8335:127:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value1 := abi_decode_t_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value1 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_enum$_AccountType(value, pos)\n    {\n        if iszero(lt(value, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_enum$_AccountType_$797__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        abi_encode_t_enum$_AccountType(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            let memberValue0 := mload(add(_3, _1))\n            abi_encode_t_enum$_AccountType(memberValue0, add(pos, _1))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IAccount_$1457__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_AccountType_$797__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_t_enum$_AccountType(value0, headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_t_string(value0, add(headStart, 96))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bool_t_address_t_address__to_t_string_memory_ptr_t_bool_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_t_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_62da2f04961f780b5985651055c24bc4349ff45136fe5f2d0ceac482a60bcb87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Account with this address alread\")\n        mstore(add(headStart, 96), \"y exists.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8426699ecf76ac2b843be88db1a2da3cecf1ac7bff9d9714d543980a8116beae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ResultAccount with this address \")\n        mstore(add(headStart, 96), \"already exists.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Only the owner can perform this \")\n        mstore(add(headStart, 96), \"action.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e8dbae96be62bbcc06f83f87757c5f93920caaa6d56fe1952a4aed401f51f656__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"LiabilityAccount with this addre\")\n        mstore(add(headStart, 96), \"ss already exists.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Account not found.\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "343:6852:5:-:0;;;827:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;874:5;:18;;882:10;-1:-1:-1;;;;;;874:18:5;;;;;;;903:5;:14;;;;;-1:-1:-1;;;;;903:14:5;;;;;;;;;;343:6852;;14:334:20;;161:2;149:9;140:7;136:23;132:32;129:2;;;182:6;174;167:22;129:2;213:16;;-1:-1:-1;;;;;258:31:20;;248:42;;238:2;;309:6;301;294:22;238:2;337:5;119:229;-1:-1:-1;;;119:229:20:o;:::-;343:6852:5;;;;;;",
  "deployedSourceMap": "343:6852:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:384;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;403:44::-;;;;;;:::i;:::-;;:::i;3237:753::-;;;;;;:::i;:::-;;:::i;:::-;;1226:630;;;;;;:::i;:::-;;:::i;376:20::-;;;:::i;5919:577::-;;;:::i;:::-;;;;;;;:::i;5073:437::-;;;;;;:::i;:::-;;:::i;454:51::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2160:701::-;;;;;;:::i;:::-;;:::i;6892:300::-;;;;;;:::i;:::-;;:::i;697:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;697:33:5;;-1:-1:-1;697:33:5;:::o;4388:384::-;-1:-1:-1;;;;;4556:25:5;;;4488:7;4556:25;;;:8;:25;;;;;;4488:7;;;;4556:25;4526:116;;;;-1:-1:-1;;;4526:116:5;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;;4683:25:5;;;;;;;:8;:25;;;;;;;;;4724:12;:29;;;;;;;4683:25;;;4724:29;;4388:384;;;:::o;403:44::-;;;;;;;;;;;;-1:-1:-1;;;;;403:44:5;;:::o;3237:753::-;3410:5;;-1:-1:-1;;;;;3410:5:5;3396:10;:19;3388:71;;;;-1:-1:-1;;;3388:71:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3500:25:5;;;3538:1;3500:25;;;:8;:25;;;;;;;3492:48;3470:145;;;;-1:-1:-1;;;3470:145:5;;;;;;;:::i;:::-;3626:30;3691:12;3718:10;3743:15;3781:5;;;;;;;;;-1:-1:-1;;;;;3781:5:5;3659:139;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3809:25:5;;;;;;;:8;:25;;;;;;;;:63;;;;;;-1:-1:-1;;;;;;3809:63:5;;;;;;;3883:12;:29;;;;;:50;;-1:-1:-1;;3883:50:5;3915:18;3883:50;;;3944:16;:38;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3237:753:5:o;1226:630::-;1372:5;;-1:-1:-1;;;;;1372:5:5;1358:10;:19;1350:71;;;;-1:-1:-1;;;1350:71:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;1462:25:5;;;1500:1;1462:25;;;:8;:25;;;;;;;1454:48;1432:139;;;;-1:-1:-1;;;1432:139:5;;;;;;;:::i;:::-;1664:5;;1608:63;;1582:23;;1625:12;;1639:15;;-1:-1:-1;;;;;1664:5:5;;1608:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1682:25:5;;;;;;;:8;:25;;;;;;;;:57;;-1:-1:-1;;;;;;1682:57:5;;;;;;;;;;;1750:12;:29;;;;;:49;;1682:57;;-1:-1:-1;1682:8:5;;-1:-1:-1;;1750:49:5;1682:8;;1750:49;;;;;-1:-1:-1;;1810:16:5;:38;;;;;;;-1:-1:-1;1810:38:5;;;;;;;;-1:-1:-1;;;;;;1810:38:5;-1:-1:-1;;;;;1810:38:5;;;;;;;;;;;-1:-1:-1;1226:630:5:o;376:20::-;;;-1:-1:-1;;;;;376:20:5;;:::o;5919:577::-;6027:16;:23;5972;;6004:20;6027:23;6098:34;;;;;;-1:-1:-1;;;6098:34:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6057:75;;6146:9;6141:320;6165:12;6161:1;:16;6141:320;;;6195:22;6220:16;6237:1;6220:19;;;;;;-1:-1:-1;;;6220:19:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6220:19:5;;;6262:24;;;6220:19;6262:24;;;;;;;;6220:19;;-1:-1:-1;6262:24:5;6254:47;6250:204;;6353:14;6318;6333:1;6318:17;;;;;;-1:-1:-1;;;6318:17:5;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6318:49:5;;;;;6414:28;;;6318:32;6414:28;;;:12;:28;;;;;;;6382:17;;6414:28;;;;;6382:14;;6397:1;;6382:17;;;;-1:-1:-1;;;6382:17:5;;;;;;;;;;;;;;;:29;;:60;;;;;;;-1:-1:-1;;;6382:60:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;6382:60:5;;;;;;;;;;;-1:-1:-1;6250:204:5;-1:-1:-1;6179:3:5;;;;:::i;:::-;;;;6141:320;;;-1:-1:-1;6474:14:5;-1:-1:-1;;5919:577:5;:::o;5073:437::-;5221:5;;-1:-1:-1;;;;;5221:5:5;5207:10;:19;5199:71;;;;-1:-1:-1;;;5199:71:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;5311:25:5;;;5349:1;5311:25;;;:8;:25;;;;;;;5281:116;;;;-1:-1:-1;;;5281:116:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;5427:25:5;;;5408:16;5427:25;;;:8;:25;;;;;;;;5463:39;;-1:-1:-1;;;5463:39:5;;5427:25;;;;;5463:22;;:39;;5486:15;;5463:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5073:437;;;:::o;454:51::-;;;;;;;;;;;;;;;:::o;2160:701::-;2310:5;;-1:-1:-1;;;;;2310:5:5;2296:10;:19;2288:71;;;;-1:-1:-1;;;2288:71:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2400:25:5;;;2438:1;2400:25;;;:8;:25;;;;;;;2392:48;2370:148;;;;-1:-1:-1;;;2370:148:5;;;;;;;:::i;:::-;2644:5;;2569:92;;2529:37;;2604:12;;2619:15;;-1:-1:-1;;;;;2644:5:5;;2569:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2672:25:5;;;;;;;:8;:25;;;;;;;;:67;;-1:-1:-1;;;;;;2672:67:5;;;;;;;;;;;2782:21;2750:29;;;;;;;;:53;;2672:67;;-1:-1:-1;2782:21:5;;-1:-1:-1;;2750:53:5;;2782:21;2750:53;;6892:300;-1:-1:-1;;;;;7046:25:5;;;6993:8;7046:25;;;:8;:25;;;;;;6993:8;;7046:25;7090:38;7082:69;;;;-1:-1:-1;;;7082:69:5;;;;;;;:::i;:::-;7169:15;-1:-1:-1;6892:300:5;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;14:175:20:-;84:20;;-1:-1:-1;;;;;133:31:20;;123:42;;113:2;;179:1;176;169:12;194:713;;292:3;285:4;277:6;273:17;269:27;259:2;;314:5;307;300:20;259:2;354:6;341:20;380:18;417:2;413;410:10;407:2;;;423:18;;:::i;:::-;472:2;466:9;541:2;522:13;;-1:-1:-1;;518:27:20;506:40;;548:4;502:51;568:18;;;588:22;;;565:46;562:2;;;614:18;;:::i;:::-;650:2;643:22;674:18;;;711:15;;;728:4;707:26;704:35;-1:-1:-1;701:2:20;;;756:5;749;742:20;701:2;824;817:4;809:6;805:17;798:4;790:6;786:17;773:54;847:15;;;864:4;843:26;836:41;;;;851:6;249:658;-1:-1:-1;;;249:658:20:o;912:198::-;;1024:2;1012:9;1003:7;999:23;995:32;992:2;;;1045:6;1037;1030:22;992:2;1073:31;1094:9;1073:31;:::i;:::-;1063:41;982:128;-1:-1:-1;;;982:128:20:o;1115:420::-;;;1254:2;1242:9;1233:7;1229:23;1225:32;1222:2;;;1275:6;1267;1260:22;1222:2;1303:31;1324:9;1303:31;:::i;:::-;1293:41;;1385:2;1374:9;1370:18;1357:32;1412:18;1404:6;1401:30;1398:2;;;1449:6;1441;1434:22;1398:2;1477:52;1521:7;1512:6;1501:9;1497:22;1477:52;:::i;:::-;1467:62;;;1212:323;;;;;:::o;1540:591::-;;;;1693:2;1681:9;1672:7;1668:23;1664:32;1661:2;;;1714:6;1706;1699:22;1661:2;1742:31;1763:9;1742:31;:::i;:::-;1732:41;;1824:2;1813:9;1809:18;1796:32;1851:18;1843:6;1840:30;1837:2;;;1888:6;1880;1873:22;1837:2;1916:52;1960:7;1951:6;1940:9;1936:22;1916:52;:::i;:::-;1906:62;;;2018:2;2007:9;2003:18;1990:32;2065:5;2058:13;2051:21;2044:5;2041:32;2031:2;;2092:6;2084;2077:22;2031:2;2120:5;2110:15;;;1651:480;;;;;:::o;2136:190::-;;2248:2;2236:9;2227:7;2223:23;2219:32;2216:2;;;2269:6;2261;2254:22;2216:2;-1:-1:-1;2297:23:20;;2206:120;-1:-1:-1;2206:120:20:o;2331:242::-;2417:1;2410:5;2407:12;2397:2;;2462:10;2457:3;2453:20;2450:1;2443:31;2497:4;2494:1;2487:15;2525:4;2522:1;2515:15;2397:2;2549:18;;2387:186::o;2578:478::-;;2660:5;2654:12;2687:6;2682:3;2675:19;2712:3;2724:162;2738:6;2735:1;2732:13;2724:162;;;2800:4;2856:13;;;2852:22;;2846:29;2828:11;;;2824:20;;2817:59;2753:12;2724:162;;;2904:6;2901:1;2898:13;2895:2;;;2970:3;2963:4;2954:6;2949:3;2945:16;2941:27;2934:40;2895:2;-1:-1:-1;3038:2:20;3017:15;-1:-1:-1;;3013:29:20;3004:39;;;;3045:4;3000:50;;2630:426;-1:-1:-1;;2630:426:20:o;3061:203::-;-1:-1:-1;;;;;3225:32:20;;;;3207:51;;3195:2;3180:18;;3162:102::o;3269:311::-;-1:-1:-1;;;;;3474:32:20;;3456:51;;3444:2;3429:18;;3516:58;3570:2;3555:18;;3547:6;3516:58;:::i;3585:900::-;3820:2;3872:21;;;3942:13;;3845:18;;;3964:22;;;3585:900;;3820:2;4005;;4023:18;;;;4064:15;;;3585:900;4110:349;4124:6;4121:1;4118:13;4110:349;;;4183:13;;4225:9;;-1:-1:-1;;;;;4221:35:20;4209:48;;4296:11;;4290:18;4321:58;4366:12;;;4290:18;4321:58;:::i;:::-;-1:-1:-1;4399:12:20;;;;4434:15;;;;4146:1;4139:9;4110:349;;;-1:-1:-1;4476:3:20;;3800:685;-1:-1:-1;;;;;;;3800:685:20:o;4715:214::-;4862:2;4847:18;;4874:49;4851:9;4905:6;4874:49;:::i;:::-;4829:100;;;;:::o;4934:222::-;;5083:2;5072:9;5065:21;5103:47;5146:2;5135:9;5131:18;5123:6;5103:47;:::i;5161:420::-;;5366:2;5355:9;5348:21;5386:47;5429:2;5418:9;5414:18;5406:6;5386:47;:::i;:::-;-1:-1:-1;;;;;5507:15:20;;;5502:2;5487:18;;5480:43;5559:15;;;;5554:2;5539:18;;;5532:43;5378:55;5338:243;-1:-1:-1;;5338:243:20:o;5586:503::-;;5813:3;5802:9;5795:22;5834:48;5877:3;5866:9;5862:19;5854:6;5834:48;:::i;:::-;5925:14;;5918:22;5913:2;5898:18;;5891:50;-1:-1:-1;;;;;;6015:15:20;;;6010:2;5995:18;;5988:43;6067:15;;6062:2;6047:18;;;6040:43;5826:56;5785:304;-1:-1:-1;5785:304:20:o;6094:405::-;6296:2;6278:21;;;6335:2;6315:18;;;6308:30;6374:34;6369:2;6354:18;;6347:62;-1:-1:-1;;;6440:2:20;6425:18;;6418:39;6489:3;6474:19;;6268:231::o;6504:411::-;6706:2;6688:21;;;6745:2;6725:18;;;6718:30;6784:34;6779:2;6764:18;;6757:62;-1:-1:-1;;;6850:2:20;6835:18;;6828:45;6905:3;6890:19;;6678:237::o;6920:403::-;7122:2;7104:21;;;7161:2;7141:18;;;7134:30;7200:34;7195:2;7180:18;;7173:62;-1:-1:-1;;;7266:2:20;7251:18;;7244:37;7313:3;7298:19;;7094:229::o;7328:414::-;7530:2;7512:21;;;7569:2;7549:18;;;7542:30;7608:34;7603:2;7588:18;;7581:62;-1:-1:-1;;;7674:2:20;7659:18;;7652:48;7732:3;7717:19;;7502:240::o;7747:342::-;7949:2;7931:21;;;7988:2;7968:18;;;7961:30;-1:-1:-1;;;8022:2:20;8007:18;;8000:48;8080:2;8065:18;;7921:168::o;8094:236::-;;-1:-1:-1;;8154:17:20;;8151:2;;;-1:-1:-1;;;8194:33:20;;8250:4;8247:1;8240:15;8280:4;8201:3;8268:17;8151:2;-1:-1:-1;8322:1:20;8311:13;;8141:189::o;8335:127::-;8396:10;8391:3;8387:20;8384:1;8377:31;8427:4;8424:1;8417:15;8451:4;8448:1;8441:15",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccount.sol\";\r\nimport \"./AssetAccount.sol\";\r\nimport \"./LiabilityAccount.sol\";\r\nimport \"./ResultAccount.sol\";\r\nimport \"../tokens/AccountingToken.sol\";\r\n\r\n/**\r\n * @title AccountingSystem\r\n * @dev Este contrato permite la gestión de cuentas de activos y resultados.\r\n */\r\n\r\ncontract AccountingSystem {\r\n    address public owner;\r\n    mapping(address => IAccount) public accounts;\r\n    mapping(address => AccountType) public accountTypes;\r\n    AccountingToken private token;\r\n\r\n    enum AccountType {\r\n        NONE,\r\n        ASSET,\r\n        LIABILITY,\r\n        RESULT\r\n    }\r\n\r\n\r\n    //  un array de direcciones de cuentas.\r\n    address[] public accountAddresses;\r\n\r\n\r\n    /**\r\n     * @dev Constructor que establece el propietario del contrato.\r\n     */\r\n    constructor(AccountingToken _token) {\r\n        owner = msg.sender;\r\n        token = _token;\r\n    }\r\n\r\n    /**\r\n     * @notice Crea una nueva cuenta de activos.\r\n     * @dev Crea una nueva instancia de AssetAccount y la almacena en el mapping.\r\n     * @param _accountAddress La dirección que se utilizará como clave para la cuenta.\r\n     * @param _accountName El nombre de la cuenta.\r\n     */\r\n    function createAssetAccount(\r\n        address _accountAddress,\r\n        string memory _accountName\r\n    ) public {\r\n        require(msg.sender == owner, \"Only the owner can perform this action.\");\r\n        require(\r\n            address(accounts[_accountAddress]) == address(0),\r\n            \"Account with this address already exists.\"\r\n        );\r\n        AssetAccount newAccount = new AssetAccount(_accountName, _accountAddress, address(token));\r\n        accounts[_accountAddress] = IAccount(address(newAccount));\r\n        accountTypes[_accountAddress] = AccountType.ASSET;\r\n        accountAddresses.push(_accountAddress);\r\n    }\r\n\r\n    /**\r\n     * @notice Crea una nueva cuenta de Pasivo.\r\n     * @dev Crea una nueva instancia de LiabilityAccount y la almacena en el mapping.\r\n     * @param _accountAddress La dirección que se utilizará como clave para la cuenta.\r\n     * @param _accountName El nombre de la cuenta.\r\n     */\r\n    function createLiabilityAccount(\r\n        address _accountAddress,\r\n        string memory _accountName\r\n    ) public {\r\n        require(msg.sender == owner, \"Only the owner can perform this action.\");\r\n        require(\r\n            address(accounts[_accountAddress]) == address(0),\r\n            \"LiabilityAccount with this address already exists.\"\r\n        );\r\n        LiabilityAccount newLiabilitytAccount = new LiabilityAccount(\r\n            _accountName,  _accountAddress, address(token)\r\n        );\r\n        accounts[_accountAddress] = IAccount(address(newLiabilitytAccount));\r\n        accountTypes[_accountAddress] = AccountType.LIABILITY;\r\n        accountAddresses.push(_accountAddress); \r\n    }\r\n\r\n    /**\r\n     * @notice Crea una nueva cuenta de resultados.\r\n     * @dev Crea una nueva instancia de ResultAccount y la almacena en el mapping.\r\n     * @param _accountAddress La dirección que se utilizará como clave para la cuenta.\r\n     * @param _accountName El nombre de la cuenta.\r\n     * @param _isExpense Indica si la cuenta es de gastos o ingresos.\r\n     */\r\n    function createResultAccount(\r\n        address _accountAddress,\r\n        string memory _accountName,\r\n        bool _isExpense\r\n    ) public {\r\n        require(msg.sender == owner, \"Only the owner can perform this action.\");\r\n        require(\r\n            address(accounts[_accountAddress]) == address(0),\r\n            \"ResultAccount with this address already exists.\"\r\n        );\r\n        ResultAccount newResultAccount = new ResultAccount(\r\n            _accountName,\r\n            _isExpense,\r\n            _accountAddress,\r\n            address(token)\r\n        );\r\n        accounts[_accountAddress] = IAccount(address(newResultAccount));\r\n        accountTypes[_accountAddress] = AccountType.RESULT;\r\n        accountAddresses.push(_accountAddress);\r\n    }\r\n\r\n    // Agrega funciones para crear otros tipos de cuentas si es necesario.\r\n\r\n    /**\r\n     * @notice Obtiene los detalles de una cuenta específica.\r\n     * @dev Retorna la dirección del contrato de la cuenta y el tipo de cuenta.\r\n     * @param _accountAddress La dirección de la cuenta a consultar.\r\n     * @return La dirección del contrato de la cuenta y el tipo de cuenta.\r\n     */\r\n    function getAccountDetails(address _accountAddress)\r\n        public\r\n        view\r\n        returns (address, AccountType)\r\n    {\r\n        require(\r\n            address(accounts[_accountAddress]) != address(0),\r\n            \"Account not found.\"\r\n        );\r\n        return (\r\n            address(accounts[_accountAddress]),\r\n            accountTypes[_accountAddress]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Actualiza el nombre de una cuenta.\r\n     * @dev Actualiza el nombre de la cuenta en la instancia del contrato de la cuenta.\r\n     * @param _accountAddress La dirección de la cuenta a actualizar.\r\n     * @param _newAccountName El nuevo nombre para la cuenta.\r\n     */\r\n    function updateAccountName(\r\n        address _accountAddress,\r\n        string memory _newAccountName\r\n    ) public {\r\n        require(msg.sender == owner, \"Only the owner can perform this action.\");\r\n        require(\r\n            address(accounts[_accountAddress]) != address(0),\r\n            \"Account not found.\"\r\n        );\r\n        IAccount account = accounts[_accountAddress];\r\n        account.setAccountName(_newAccountName);\r\n    }\r\n\r\n    // Agrega funciones de actualización para otros atributos de la cuenta si es necesario.\r\n\r\n    /**\r\n     * @notice Obtiene todas las direcciones de cuentas de activos o pasivos o resultados.\r\n     * @dev Retorna un array de direcciones de cuentas de activos o pasivos o resultados según el parámetro.\r\n     * @return Un array de direcciones de cuentas y un array de tipos de cuentas.\r\n     */\r\n    function getAllAccountDetails() public view returns (AccountDetails[] memory) {\r\n    uint256 accountCount = accountAddresses.length;\r\n    AccountDetails[] memory accountDetails = new AccountDetails[](accountCount);\r\n\r\n    for (uint256 i = 0; i < accountCount; i++) {\r\n        address accountAddress = accountAddresses[i];\r\n        if (address(accounts[accountAddress]) != address(0)) {\r\n            accountDetails[i].accountAddress = accountAddress;\r\n            accountDetails[i].accountType = accountTypes[accountAddress];\r\n        }\r\n    }\r\n    return accountDetails;\r\n    }\r\n\r\n\r\n    struct AccountDetails {\r\n    address accountAddress;\r\n    AccountType accountType;\r\n    }\r\n\r\n\r\n    /**\r\n     * @notice Obtiene la instancia del contrato de una cuenta.\r\n     * @dev Retorna la instancia del contrato de una cuenta específica.\r\n     * @param _accountAddress Direccion asociada a la cuenta contable\r\n     * @return La dirección del contrato de la cuenta.\r\n     */\r\n\r\n    function getAccountInstance(address _accountAddress)\r\n        public\r\n        view\r\n        returns (IAccount)\r\n    {\r\n        IAccount accountInstance = accounts[_accountAddress];\r\n        require(address(accountInstance) != address(0), \"Account not found.\");\r\n        return accountInstance;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Workspaces\\vdg-api-accounting\\contracts\\accountingSystem\\AccountingSystem.sol",
  "ast": {
    "absolutePath": "project:/contracts/accountingSystem/AccountingSystem.sol",
    "exportedSymbols": {
      "AccountingSystem": [
        1227
      ],
      "AccountingToken": [
        2636
      ],
      "AssetAccount": [
        1417
      ],
      "Context": [
        711
      ],
      "ERC20": [
        586
      ],
      "IAccount": [
        1457
      ],
      "IERC20": [
        664
      ],
      "IERC20Metadata": [
        689
      ],
      "LiabilityAccount": [
        1630
      ],
      "ResultAccount": [
        1849
      ]
    },
    "id": 1228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 771,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "project:/contracts/accountingSystem/IAccount.sol",
        "file": "./IAccount.sol",
        "id": 772,
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 1458,
        "src": "60:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/accountingSystem/AssetAccount.sol",
        "file": "./AssetAccount.sol",
        "id": 773,
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 1418,
        "src": "86:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/accountingSystem/LiabilityAccount.sol",
        "file": "./LiabilityAccount.sol",
        "id": 774,
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 1631,
        "src": "116:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/accountingSystem/ResultAccount.sol",
        "file": "./ResultAccount.sol",
        "id": 775,
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 1850,
        "src": "150:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/AccountingToken.sol",
        "file": "../tokens/AccountingToken.sol",
        "id": 776,
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 2637,
        "src": "181:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1417,
          1630,
          1849
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 777,
          "nodeType": "StructuredDocumentation",
          "src": "224:115:5",
          "text": " @title AccountingSystem\n @dev Este contrato permite la gestión de cuentas de activos y resultados."
        },
        "fullyImplemented": true,
        "id": 1227,
        "linearizedBaseContracts": [
          1227
        ],
        "name": "AccountingSystem",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 779,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "376:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 778,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5c06e2",
            "id": 784,
            "mutability": "mutable",
            "name": "accounts",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "403:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
              "typeString": "mapping(address => contract IAccount)"
            },
            "typeName": {
              "id": 783,
              "keyType": {
                "id": 780,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "411:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "403:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                "typeString": "mapping(address => contract IAccount)"
              },
              "valueType": {
                "id": 782,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 781,
                  "name": "IAccount",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1457,
                  "src": "422:8:5"
                },
                "referencedDeclaration": 1457,
                "src": "422:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IAccount_$1457",
                  "typeString": "contract IAccount"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de32b680",
            "id": 789,
            "mutability": "mutable",
            "name": "accountTypes",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "454:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_AccountType_$797_$",
              "typeString": "mapping(address => enum AccountingSystem.AccountType)"
            },
            "typeName": {
              "id": 788,
              "keyType": {
                "id": 785,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "462:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "454:31:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_AccountType_$797_$",
                "typeString": "mapping(address => enum AccountingSystem.AccountType)"
              },
              "valueType": {
                "id": 787,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 786,
                  "name": "AccountType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 797,
                  "src": "473:11:5"
                },
                "referencedDeclaration": 797,
                "src": "473:11:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_AccountType_$797",
                  "typeString": "enum AccountingSystem.AccountType"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 792,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "512:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AccountingToken_$2636",
              "typeString": "contract AccountingToken"
            },
            "typeName": {
              "id": 791,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 790,
                "name": "AccountingToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2636,
                "src": "512:15:5"
              },
              "referencedDeclaration": 2636,
              "src": "512:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccountingToken_$2636",
                "typeString": "contract AccountingToken"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "AccountingSystem.AccountType",
            "id": 797,
            "members": [
              {
                "id": 793,
                "name": "NONE",
                "nodeType": "EnumValue",
                "src": "578:4:5"
              },
              {
                "id": 794,
                "name": "ASSET",
                "nodeType": "EnumValue",
                "src": "593:5:5"
              },
              {
                "id": 795,
                "name": "LIABILITY",
                "nodeType": "EnumValue",
                "src": "609:9:5"
              },
              {
                "id": 796,
                "name": "RESULT",
                "nodeType": "EnumValue",
                "src": "629:6:5"
              }
            ],
            "name": "AccountType",
            "nodeType": "EnumDefinition",
            "src": "550:92:5"
          },
          {
            "constant": false,
            "functionSelector": "1bff58d8",
            "id": 800,
            "mutability": "mutable",
            "name": "accountAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "697:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 798,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "697:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 799,
              "nodeType": "ArrayTypeName",
              "src": "697:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "863:62:5",
              "statements": [
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 807,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "874:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 808,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "882:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "882:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "874:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "874:18:5"
                },
                {
                  "expression": {
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 812,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "903:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccountingToken_$2636",
                        "typeString": "contract AccountingToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 813,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "911:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccountingToken_$2636",
                        "typeString": "contract AccountingToken"
                      }
                    },
                    "src": "903:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AccountingToken_$2636",
                      "typeString": "contract AccountingToken"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "903:14:5"
                }
              ]
            },
            "documentation": {
              "id": 801,
              "nodeType": "StructuredDocumentation",
              "src": "741:80:5",
              "text": " @dev Constructor que establece el propietario del contrato."
            },
            "id": 817,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "839:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AccountingToken_$2636",
                    "typeString": "contract AccountingToken"
                  },
                  "typeName": {
                    "id": 803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 802,
                      "name": "AccountingToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2636,
                      "src": "839:15:5"
                    },
                    "referencedDeclaration": 2636,
                    "src": "839:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AccountingToken_$2636",
                      "typeString": "contract AccountingToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:24:5"
            },
            "returnParameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:5"
            },
            "scope": 1227,
            "src": "827:98:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "1339:517:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 826,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1358:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1358:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 828,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "1372:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1358:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e2e",
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        },
                        "value": "Only the owner can perform this action."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        }
                      ],
                      "id": 825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1350:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 832,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 836,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "1462:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                                  "typeString": "mapping(address => contract IAccount)"
                                }
                              },
                              "id": 838,
                              "indexExpression": {
                                "id": 837,
                                "name": "_accountAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 820,
                                "src": "1471:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1462:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1454:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 834,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1454:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1454:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1500:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1492:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 840,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1492:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1492:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1454:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420776974682074686973206164647265737320616c7265616479206578697374732e",
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1517:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62da2f04961f780b5985651055c24bc4349ff45136fe5f2d0ceac482a60bcb87",
                          "typeString": "literal_string \"Account with this address already exists.\""
                        },
                        "value": "Account with this address already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62da2f04961f780b5985651055c24bc4349ff45136fe5f2d0ceac482a60bcb87",
                          "typeString": "literal_string \"Account with this address already exists.\""
                        }
                      ],
                      "id": 833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1432:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:139:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:139:5"
                },
                {
                  "assignments": [
                    850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 850,
                      "mutability": "mutable",
                      "name": "newAccount",
                      "nodeType": "VariableDeclaration",
                      "scope": 886,
                      "src": "1582:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssetAccount_$1417",
                        "typeString": "contract AssetAccount"
                      },
                      "typeName": {
                        "id": 849,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 848,
                          "name": "AssetAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1417,
                          "src": "1582:12:5"
                        },
                        "referencedDeclaration": 1417,
                        "src": "1582:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetAccount_$1417",
                          "typeString": "contract AssetAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 861,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 854,
                        "name": "_accountName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "1625:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 855,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1639:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 858,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "1664:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccountingToken_$2636",
                              "typeString": "contract AccountingToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AccountingToken_$2636",
                              "typeString": "contract AccountingToken"
                            }
                          ],
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1656:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 856,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1656:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1656:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1608:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_contract$_AssetAccount_$1417_$",
                        "typeString": "function (string memory,address,address) returns (contract AssetAccount)"
                      },
                      "typeName": {
                        "id": 852,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 851,
                          "name": "AssetAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1417,
                          "src": "1612:12:5"
                        },
                        "referencedDeclaration": 1417,
                        "src": "1612:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetAccount_$1417",
                          "typeString": "contract AssetAccount"
                        }
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AssetAccount_$1417",
                      "typeString": "contract AssetAccount"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1582:89:5"
                },
                {
                  "expression": {
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 862,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "1682:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                          "typeString": "mapping(address => contract IAccount)"
                        }
                      },
                      "id": 864,
                      "indexExpression": {
                        "id": 863,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1691:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1682:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 868,
                              "name": "newAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 850,
                              "src": "1727:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetAccount_$1417",
                                "typeString": "contract AssetAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetAccount_$1417",
                                "typeString": "contract AssetAccount"
                              }
                            ],
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1719:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 866,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1719:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1719:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 865,
                        "name": "IAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "1710:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAccount_$1457_$",
                          "typeString": "type(contract IAccount)"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1710:29:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      }
                    },
                    "src": "1682:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccount_$1457",
                      "typeString": "contract IAccount"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "1682:57:5"
                },
                {
                  "expression": {
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 873,
                        "name": "accountTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "1750:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_AccountType_$797_$",
                          "typeString": "mapping(address => enum AccountingSystem.AccountType)"
                        }
                      },
                      "id": 875,
                      "indexExpression": {
                        "id": 874,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1763:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1750:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$797",
                        "typeString": "enum AccountingSystem.AccountType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 876,
                        "name": "AccountType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "1782:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AccountType_$797_$",
                          "typeString": "type(enum AccountingSystem.AccountType)"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ASSET",
                      "nodeType": "MemberAccess",
                      "src": "1782:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$797",
                        "typeString": "enum AccountingSystem.AccountType"
                      }
                    },
                    "src": "1750:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$797",
                      "typeString": "enum AccountingSystem.AccountType"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:49:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 883,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1832:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 880,
                        "name": "accountAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "1810:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1810:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:38:5"
                }
              ]
            },
            "documentation": {
              "id": 818,
              "nodeType": "StructuredDocumentation",
              "src": "933:287:5",
              "text": " @notice Crea una nueva cuenta de activos.\n @dev Crea una nueva instancia de AssetAccount y la almacena en el mapping.\n @param _accountAddress La dirección que se utilizará como clave para la cuenta.\n @param _accountName El nombre de la cuenta."
            },
            "functionSelector": "879b26c0",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAssetAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "1264:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "_accountName",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "1298:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:78:5"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:0:5"
            },
            "scope": 1227,
            "src": "1226:630:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 956,
              "nodeType": "Block",
              "src": "2277:584:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 896,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2296:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2296:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 898,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "2310:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2296:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e2e",
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2317:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        },
                        "value": "Only the owner can perform this action."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2288:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2288:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 902,
                  "nodeType": "ExpressionStatement",
                  "src": "2288:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 906,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "2400:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                                  "typeString": "mapping(address => contract IAccount)"
                                }
                              },
                              "id": 908,
                              "indexExpression": {
                                "id": 907,
                                "name": "_accountAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 890,
                                "src": "2409:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2400:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2392:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 904,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2392:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2392:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2438:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2430:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 910,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2430:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2430:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2392:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696162696c6974794163636f756e7420776974682074686973206164647265737320616c7265616479206578697374732e",
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2455:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8dbae96be62bbcc06f83f87757c5f93920caaa6d56fe1952a4aed401f51f656",
                          "typeString": "literal_string \"LiabilityAccount with this address already exists.\""
                        },
                        "value": "LiabilityAccount with this address already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8dbae96be62bbcc06f83f87757c5f93920caaa6d56fe1952a4aed401f51f656",
                          "typeString": "literal_string \"LiabilityAccount with this address already exists.\""
                        }
                      ],
                      "id": 903,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2370:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:148:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 917,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:148:5"
                },
                {
                  "assignments": [
                    920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 920,
                      "mutability": "mutable",
                      "name": "newLiabilitytAccount",
                      "nodeType": "VariableDeclaration",
                      "scope": 956,
                      "src": "2529:37:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiabilityAccount_$1630",
                        "typeString": "contract LiabilityAccount"
                      },
                      "typeName": {
                        "id": 919,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 918,
                          "name": "LiabilityAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1630,
                          "src": "2529:16:5"
                        },
                        "referencedDeclaration": 1630,
                        "src": "2529:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiabilityAccount_$1630",
                          "typeString": "contract LiabilityAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 924,
                        "name": "_accountName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "2604:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 925,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "2619:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 928,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "2644:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccountingToken_$2636",
                              "typeString": "contract AccountingToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AccountingToken_$2636",
                              "typeString": "contract AccountingToken"
                            }
                          ],
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2636:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 926,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2636:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2636:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2569:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_contract$_LiabilityAccount_$1630_$",
                        "typeString": "function (string memory,address,address) returns (contract LiabilityAccount)"
                      },
                      "typeName": {
                        "id": 922,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 921,
                          "name": "LiabilityAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1630,
                          "src": "2573:16:5"
                        },
                        "referencedDeclaration": 1630,
                        "src": "2573:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiabilityAccount_$1630",
                          "typeString": "contract LiabilityAccount"
                        }
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:92:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiabilityAccount_$1630",
                      "typeString": "contract LiabilityAccount"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2529:132:5"
                },
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 932,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "2672:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                          "typeString": "mapping(address => contract IAccount)"
                        }
                      },
                      "id": 934,
                      "indexExpression": {
                        "id": 933,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "2681:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2672:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 938,
                              "name": "newLiabilitytAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 920,
                              "src": "2717:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiabilityAccount_$1630",
                                "typeString": "contract LiabilityAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiabilityAccount_$1630",
                                "typeString": "contract LiabilityAccount"
                              }
                            ],
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2709:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 936,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2709:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2709:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 935,
                        "name": "IAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "2700:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAccount_$1457_$",
                          "typeString": "type(contract IAccount)"
                        }
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2700:39:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      }
                    },
                    "src": "2672:67:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccount_$1457",
                      "typeString": "contract IAccount"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:67:5"
                },
                {
                  "expression": {
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 943,
                        "name": "accountTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "2750:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_AccountType_$797_$",
                          "typeString": "mapping(address => enum AccountingSystem.AccountType)"
                        }
                      },
                      "id": 945,
                      "indexExpression": {
                        "id": 944,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "2763:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2750:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$797",
                        "typeString": "enum AccountingSystem.AccountType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 946,
                        "name": "AccountType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "2782:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AccountType_$797_$",
                          "typeString": "type(enum AccountingSystem.AccountType)"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "LIABILITY",
                      "nodeType": "MemberAccess",
                      "src": "2782:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$797",
                        "typeString": "enum AccountingSystem.AccountType"
                      }
                    },
                    "src": "2750:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$797",
                      "typeString": "enum AccountingSystem.AccountType"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 953,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "2836:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 950,
                        "name": "accountAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "2814:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2814:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:38:5"
                }
              ]
            },
            "documentation": {
              "id": 888,
              "nodeType": "StructuredDocumentation",
              "src": "1864:290:5",
              "text": " @notice Crea una nueva cuenta de Pasivo.\n @dev Crea una nueva instancia de LiabilityAccount y la almacena en el mapping.\n @param _accountAddress La dirección que se utilizará como clave para la cuenta.\n @param _accountName El nombre de la cuenta."
            },
            "functionSelector": "df1f0858",
            "id": 957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLiabilityAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 957,
                  "src": "2202:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "_accountName",
                  "nodeType": "VariableDeclaration",
                  "scope": 957,
                  "src": "2236:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2191:78:5"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2277:0:5"
            },
            "scope": 1227,
            "src": "2160:701:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "3377:613:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 968,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3396:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3396:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 970,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "3410:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3396:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e2e",
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3417:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        },
                        "value": "Only the owner can perform this action."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        }
                      ],
                      "id": 967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3388:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3388:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 978,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "3500:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                                  "typeString": "mapping(address => contract IAccount)"
                                }
                              },
                              "id": 980,
                              "indexExpression": {
                                "id": 979,
                                "name": "_accountAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "3509:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3500:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3492:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 976,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3492:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3492:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3538:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3530:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 982,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3530:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3530:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3492:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526573756c744163636f756e7420776974682074686973206164647265737320616c7265616479206578697374732e",
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3555:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8426699ecf76ac2b843be88db1a2da3cecf1ac7bff9d9714d543980a8116beae",
                          "typeString": "literal_string \"ResultAccount with this address already exists.\""
                        },
                        "value": "ResultAccount with this address already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8426699ecf76ac2b843be88db1a2da3cecf1ac7bff9d9714d543980a8116beae",
                          "typeString": "literal_string \"ResultAccount with this address already exists.\""
                        }
                      ],
                      "id": 975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3470:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:145:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:145:5"
                },
                {
                  "assignments": [
                    992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 992,
                      "mutability": "mutable",
                      "name": "newResultAccount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "3626:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ResultAccount_$1849",
                        "typeString": "contract ResultAccount"
                      },
                      "typeName": {
                        "id": 991,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 990,
                          "name": "ResultAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1849,
                          "src": "3626:13:5"
                        },
                        "referencedDeclaration": 1849,
                        "src": "3626:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ResultAccount_$1849",
                          "typeString": "contract ResultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1004,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 996,
                        "name": "_accountName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "3691:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 997,
                        "name": "_isExpense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "3718:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 998,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "3743:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1001,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "3781:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccountingToken_$2636",
                              "typeString": "contract AccountingToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AccountingToken_$2636",
                              "typeString": "contract AccountingToken"
                            }
                          ],
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3773:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3773:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3773:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3659:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_bool_$_t_address_$_t_address_$returns$_t_contract$_ResultAccount_$1849_$",
                        "typeString": "function (string memory,bool,address,address) returns (contract ResultAccount)"
                      },
                      "typeName": {
                        "id": 994,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 993,
                          "name": "ResultAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1849,
                          "src": "3663:13:5"
                        },
                        "referencedDeclaration": 1849,
                        "src": "3663:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ResultAccount_$1849",
                          "typeString": "contract ResultAccount"
                        }
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:139:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ResultAccount_$1849",
                      "typeString": "contract ResultAccount"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3626:172:5"
                },
                {
                  "expression": {
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1005,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "3809:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                          "typeString": "mapping(address => contract IAccount)"
                        }
                      },
                      "id": 1007,
                      "indexExpression": {
                        "id": 1006,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "3818:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3809:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1011,
                              "name": "newResultAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "3854:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ResultAccount_$1849",
                                "typeString": "contract ResultAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ResultAccount_$1849",
                                "typeString": "contract ResultAccount"
                              }
                            ],
                            "id": 1010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3846:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1009,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3846:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3846:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1008,
                        "name": "IAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "3837:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAccount_$1457_$",
                          "typeString": "type(contract IAccount)"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3837:35:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      }
                    },
                    "src": "3809:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccount_$1457",
                      "typeString": "contract IAccount"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:63:5"
                },
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1016,
                        "name": "accountTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "3883:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_AccountType_$797_$",
                          "typeString": "mapping(address => enum AccountingSystem.AccountType)"
                        }
                      },
                      "id": 1018,
                      "indexExpression": {
                        "id": 1017,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "3896:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3883:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$797",
                        "typeString": "enum AccountingSystem.AccountType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1019,
                        "name": "AccountType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "3915:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AccountType_$797_$",
                          "typeString": "type(enum AccountingSystem.AccountType)"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RESULT",
                      "nodeType": "MemberAccess",
                      "src": "3915:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$797",
                        "typeString": "enum AccountingSystem.AccountType"
                      }
                    },
                    "src": "3883:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$797",
                      "typeString": "enum AccountingSystem.AccountType"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1026,
                        "name": "_accountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "3966:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1023,
                        "name": "accountAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "3944:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3944:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3944:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "3944:38:5"
                }
              ]
            },
            "documentation": {
              "id": 958,
              "nodeType": "StructuredDocumentation",
              "src": "2869:362:5",
              "text": " @notice Crea una nueva cuenta de resultados.\n @dev Crea una nueva instancia de ResultAccount y la almacena en el mapping.\n @param _accountAddress La dirección que se utilizará como clave para la cuenta.\n @param _accountName El nombre de la cuenta.\n @param _isExpense Indica si la cuenta es de gastos o ingresos."
            },
            "functionSelector": "7ca10678",
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createResultAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "3276:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3276:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "_accountName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "3310:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "_isExpense",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "3347:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3265:104:5"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3377:0:5"
            },
            "scope": 1227,
            "src": "3237:753:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1067,
              "nodeType": "Block",
              "src": "4515:257:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1044,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "4556:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                                  "typeString": "mapping(address => contract IAccount)"
                                }
                              },
                              "id": 1046,
                              "indexExpression": {
                                "id": 1045,
                                "name": "_accountAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1033,
                                "src": "4565:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4556:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4548:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1042,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4548:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4548:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4594:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4586:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1048,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4586:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4586:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4548:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e74206e6f7420666f756e642e",
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4611:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47",
                          "typeString": "literal_string \"Account not found.\""
                        },
                        "value": "Account not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47",
                          "typeString": "literal_string \"Account not found.\""
                        }
                      ],
                      "id": 1041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4526:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4526:116:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "4526:116:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 1058,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "4683:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                                "typeString": "mapping(address => contract IAccount)"
                              }
                            },
                            "id": 1060,
                            "indexExpression": {
                              "id": 1059,
                              "name": "_accountAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1033,
                              "src": "4692:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4683:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAccount_$1457",
                              "typeString": "contract IAccount"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAccount_$1457",
                              "typeString": "contract IAccount"
                            }
                          ],
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4675:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1056,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4675:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4675:34:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1062,
                          "name": "accountTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "4724:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_AccountType_$797_$",
                            "typeString": "mapping(address => enum AccountingSystem.AccountType)"
                          }
                        },
                        "id": 1064,
                        "indexExpression": {
                          "id": 1063,
                          "name": "_accountAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "4737:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4724:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AccountType_$797",
                          "typeString": "enum AccountingSystem.AccountType"
                        }
                      }
                    ],
                    "id": 1065,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4660:104:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_enum$_AccountType_$797_$",
                      "typeString": "tuple(address,enum AccountingSystem.AccountType)"
                    }
                  },
                  "functionReturnParameters": 1040,
                  "id": 1066,
                  "nodeType": "Return",
                  "src": "4653:111:5"
                }
              ]
            },
            "documentation": {
              "id": 1031,
              "nodeType": "StructuredDocumentation",
              "src": "4076:306:5",
              "text": " @notice Obtiene los detalles de una cuenta específica.\n @dev Retorna la dirección del contrato de la cuenta y el tipo de cuenta.\n @param _accountAddress La dirección de la cuenta a consultar.\n @return La dirección del contrato de la cuenta y el tipo de cuenta."
            },
            "functionSelector": "2aceb534",
            "id": 1068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "4415:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4415:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4414:25:5"
            },
            "returnParameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "4488:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4488:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "4497:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AccountType_$797",
                    "typeString": "enum AccountingSystem.AccountType"
                  },
                  "typeName": {
                    "id": 1038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1037,
                      "name": "AccountType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 797,
                      "src": "4497:11:5"
                    },
                    "referencedDeclaration": 797,
                    "src": "4497:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$797",
                      "typeString": "enum AccountingSystem.AccountType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4487:22:5"
            },
            "scope": 1227,
            "src": "4388:384:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "5188:322:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1077,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5207:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5207:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1079,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "5221:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5207:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e2e",
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5228:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        },
                        "value": "Only the owner can perform this action."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
                          "typeString": "literal_string \"Only the owner can perform this action.\""
                        }
                      ],
                      "id": 1076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5199:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5199:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "5199:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1087,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "5311:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                                  "typeString": "mapping(address => contract IAccount)"
                                }
                              },
                              "id": 1089,
                              "indexExpression": {
                                "id": 1088,
                                "name": "_accountAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1071,
                                "src": "5320:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5311:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 1086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5303:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1085,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5303:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5303:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5349:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5341:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5341:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5341:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5303:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e74206e6f7420666f756e642e",
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5366:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47",
                          "typeString": "literal_string \"Account not found.\""
                        },
                        "value": "Account not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47",
                          "typeString": "literal_string \"Account not found.\""
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5281:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:116:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:116:5"
                },
                {
                  "assignments": [
                    1101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1101,
                      "mutability": "mutable",
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "5408:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      },
                      "typeName": {
                        "id": 1100,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1099,
                          "name": "IAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1457,
                          "src": "5408:8:5"
                        },
                        "referencedDeclaration": 1457,
                        "src": "5408:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$1457",
                          "typeString": "contract IAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1102,
                      "name": "accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "5427:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                        "typeString": "mapping(address => contract IAccount)"
                      }
                    },
                    "id": 1104,
                    "indexExpression": {
                      "id": 1103,
                      "name": "_accountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "5436:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5427:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccount_$1457",
                      "typeString": "contract IAccount"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5408:44:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1109,
                        "name": "_newAccountName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "5486:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1106,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "5463:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$1457",
                          "typeString": "contract IAccount"
                        }
                      },
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAccountName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1450,
                      "src": "5463:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:39:5"
                }
              ]
            },
            "documentation": {
              "id": 1069,
              "nodeType": "StructuredDocumentation",
              "src": "4780:287:5",
              "text": " @notice Actualiza el nombre de una cuenta.\n @dev Actualiza el nombre de la cuenta en la instancia del contrato de la cuenta.\n @param _accountAddress La dirección de la cuenta a actualizar.\n @param _newAccountName El nuevo nombre para la cuenta."
            },
            "functionSelector": "d6fe8581",
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAccountName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "5110:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "_newAccountName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "5144:29:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5144:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5099:81:5"
            },
            "returnParameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5188:0:5"
            },
            "scope": 1227,
            "src": "5073:437:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1187,
              "nodeType": "Block",
              "src": "5997:499:5",
              "statements": [
                {
                  "assignments": [
                    1122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "accountCount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "6004:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6004:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1125,
                  "initialValue": {
                    "expression": {
                      "id": 1123,
                      "name": "accountAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "6027:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6027:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6004:46:5"
                },
                {
                  "assignments": [
                    1130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1130,
                      "mutability": "mutable",
                      "name": "accountDetails",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "6057:38:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AccountingSystem.AccountDetails[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1128,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1127,
                            "name": "AccountDetails",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1194,
                            "src": "6057:14:5"
                          },
                          "referencedDeclaration": 1194,
                          "src": "6057:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AccountDetails_$1194_storage_ptr",
                            "typeString": "struct AccountingSystem.AccountDetails"
                          }
                        },
                        "id": 1129,
                        "nodeType": "ArrayTypeName",
                        "src": "6057:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_storage_$dyn_storage_ptr",
                          "typeString": "struct AccountingSystem.AccountDetails[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1137,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1135,
                        "name": "accountCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "6119:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6098:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AccountingSystem.AccountDetails memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1132,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1131,
                            "name": "AccountDetails",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1194,
                            "src": "6102:14:5"
                          },
                          "referencedDeclaration": 1194,
                          "src": "6102:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AccountDetails_$1194_storage_ptr",
                            "typeString": "struct AccountingSystem.AccountDetails"
                          }
                        },
                        "id": 1133,
                        "nodeType": "ArrayTypeName",
                        "src": "6102:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_storage_$dyn_storage_ptr",
                          "typeString": "struct AccountingSystem.AccountDetails[]"
                        }
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6098:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AccountingSystem.AccountDetails memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6057:75:5"
                },
                {
                  "body": {
                    "id": 1183,
                    "nodeType": "Block",
                    "src": "6184:277:5",
                    "statements": [
                      {
                        "assignments": [
                          1149
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1149,
                            "mutability": "mutable",
                            "name": "accountAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 1183,
                            "src": "6195:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1148,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6195:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1153,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1150,
                            "name": "accountAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "6220:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1152,
                          "indexExpression": {
                            "id": 1151,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1139,
                            "src": "6237:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6220:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6195:44:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1156,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 784,
                                  "src": "6262:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                                    "typeString": "mapping(address => contract IAccount)"
                                  }
                                },
                                "id": 1158,
                                "indexExpression": {
                                  "id": 1157,
                                  "name": "accountAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1149,
                                  "src": "6271:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6262:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAccount_$1457",
                                  "typeString": "contract IAccount"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAccount_$1457",
                                  "typeString": "contract IAccount"
                                }
                              ],
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6254:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1154,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6254:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6254:33:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6299:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6291:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1160,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6291:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6291:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6254:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1182,
                        "nodeType": "IfStatement",
                        "src": "6250:204:5",
                        "trueBody": {
                          "id": 1181,
                          "nodeType": "Block",
                          "src": "6303:151:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1165,
                                      "name": "accountDetails",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1130,
                                      "src": "6318:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct AccountingSystem.AccountDetails memory[] memory"
                                      }
                                    },
                                    "id": 1167,
                                    "indexExpression": {
                                      "id": 1166,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1139,
                                      "src": "6333:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6318:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AccountDetails_$1194_memory_ptr",
                                      "typeString": "struct AccountingSystem.AccountDetails memory"
                                    }
                                  },
                                  "id": 1168,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accountAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1190,
                                  "src": "6318:32:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1169,
                                  "name": "accountAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1149,
                                  "src": "6353:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6318:49:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1171,
                              "nodeType": "ExpressionStatement",
                              "src": "6318:49:5"
                            },
                            {
                              "expression": {
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1172,
                                      "name": "accountDetails",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1130,
                                      "src": "6382:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct AccountingSystem.AccountDetails memory[] memory"
                                      }
                                    },
                                    "id": 1174,
                                    "indexExpression": {
                                      "id": 1173,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1139,
                                      "src": "6397:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6382:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AccountDetails_$1194_memory_ptr",
                                      "typeString": "struct AccountingSystem.AccountDetails memory"
                                    }
                                  },
                                  "id": 1175,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accountType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1193,
                                  "src": "6382:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AccountType_$797",
                                    "typeString": "enum AccountingSystem.AccountType"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1176,
                                    "name": "accountTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 789,
                                    "src": "6414:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_enum$_AccountType_$797_$",
                                      "typeString": "mapping(address => enum AccountingSystem.AccountType)"
                                    }
                                  },
                                  "id": 1178,
                                  "indexExpression": {
                                    "id": 1177,
                                    "name": "accountAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1149,
                                    "src": "6427:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6414:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AccountType_$797",
                                    "typeString": "enum AccountingSystem.AccountType"
                                  }
                                },
                                "src": "6382:60:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AccountType_$797",
                                  "typeString": "enum AccountingSystem.AccountType"
                                }
                              },
                              "id": 1180,
                              "nodeType": "ExpressionStatement",
                              "src": "6382:60:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1142,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1139,
                      "src": "6161:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1143,
                      "name": "accountCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "6165:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6161:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1184,
                  "initializationExpression": {
                    "assignments": [
                      1139
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "6146:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6146:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1141,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6158:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6146:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6179:3:5",
                      "subExpression": {
                        "id": 1145,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1139,
                        "src": "6179:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1147,
                    "nodeType": "ExpressionStatement",
                    "src": "6179:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6141:320:5"
                },
                {
                  "expression": {
                    "id": 1185,
                    "name": "accountDetails",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1130,
                    "src": "6474:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AccountingSystem.AccountDetails memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1120,
                  "id": 1186,
                  "nodeType": "Return",
                  "src": "6467:21:5"
                }
              ]
            },
            "documentation": {
              "id": 1114,
              "nodeType": "StructuredDocumentation",
              "src": "5614:299:5",
              "text": " @notice Obtiene todas las direcciones de cuentas de activos o pasivos o resultados.\n @dev Retorna un array de direcciones de cuentas de activos o pasivos o resultados según el parámetro.\n @return Un array de direcciones de cuentas y un array de tipos de cuentas."
            },
            "functionSelector": "d3bb4270",
            "id": 1188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllAccountDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5948:2:5"
            },
            "returnParameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "5972:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AccountingSystem.AccountDetails[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1117,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1116,
                        "name": "AccountDetails",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1194,
                        "src": "5972:14:5"
                      },
                      "referencedDeclaration": 1194,
                      "src": "5972:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AccountDetails_$1194_storage_ptr",
                        "typeString": "struct AccountingSystem.AccountDetails"
                      }
                    },
                    "id": 1118,
                    "nodeType": "ArrayTypeName",
                    "src": "5972:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AccountDetails_$1194_storage_$dyn_storage_ptr",
                      "typeString": "struct AccountingSystem.AccountDetails[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5971:25:5"
            },
            "scope": 1227,
            "src": "5919:577:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "AccountingSystem.AccountDetails",
            "id": 1194,
            "members": [
              {
                "constant": false,
                "id": 1190,
                "mutability": "mutable",
                "name": "accountAddress",
                "nodeType": "VariableDeclaration",
                "scope": 1194,
                "src": "6535:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1189,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6535:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1193,
                "mutability": "mutable",
                "name": "accountType",
                "nodeType": "VariableDeclaration",
                "scope": 1194,
                "src": "6564:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_AccountType_$797",
                  "typeString": "enum AccountingSystem.AccountType"
                },
                "typeName": {
                  "id": 1192,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1191,
                    "name": "AccountType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 797,
                    "src": "6564:11:5"
                  },
                  "referencedDeclaration": 797,
                  "src": "6564:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AccountType_$797",
                    "typeString": "enum AccountingSystem.AccountType"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AccountDetails",
            "nodeType": "StructDefinition",
            "scope": 1227,
            "src": "6506:89:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "7008:184:5",
              "statements": [
                {
                  "assignments": [
                    1205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1205,
                      "mutability": "mutable",
                      "name": "accountInstance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "7019:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccount_$1457",
                        "typeString": "contract IAccount"
                      },
                      "typeName": {
                        "id": 1204,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1203,
                          "name": "IAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1457,
                          "src": "7019:8:5"
                        },
                        "referencedDeclaration": 1457,
                        "src": "7019:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccount_$1457",
                          "typeString": "contract IAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1209,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1206,
                      "name": "accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "7046:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IAccount_$1457_$",
                        "typeString": "mapping(address => contract IAccount)"
                      }
                    },
                    "id": 1208,
                    "indexExpression": {
                      "id": 1207,
                      "name": "_accountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "7055:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7046:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccount_$1457",
                      "typeString": "contract IAccount"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7019:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1213,
                              "name": "accountInstance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1205,
                              "src": "7098:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAccount_$1457",
                                "typeString": "contract IAccount"
                              }
                            ],
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7090:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7090:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7090:24:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7126:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7118:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1215,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7118:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7118:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7090:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e74206e6f7420666f756e642e",
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7130:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47",
                          "typeString": "literal_string \"Account not found.\""
                        },
                        "value": "Account not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc67d6928bd9b71230fc52cda8cc21192abea0e8e318d07019466c6854d26c47",
                          "typeString": "literal_string \"Account not found.\""
                        }
                      ],
                      "id": 1210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7082:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7082:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "7082:69:5"
                },
                {
                  "expression": {
                    "id": 1223,
                    "name": "accountInstance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1205,
                    "src": "7169:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccount_$1457",
                      "typeString": "contract IAccount"
                    }
                  },
                  "functionReturnParameters": 1202,
                  "id": 1224,
                  "nodeType": "Return",
                  "src": "7162:22:5"
                }
              ]
            },
            "documentation": {
              "id": 1195,
              "nodeType": "StructuredDocumentation",
              "src": "6605:279:5",
              "text": " @notice Obtiene la instancia del contrato de una cuenta.\n @dev Retorna la instancia del contrato de una cuenta específica.\n @param _accountAddress Direccion asociada a la cuenta contable\n @return La dirección del contrato de la cuenta."
            },
            "functionSelector": "eac542a8",
            "id": 1226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountInstance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "6920:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6919:25:5"
            },
            "returnParameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "6993:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAccount_$1457",
                    "typeString": "contract IAccount"
                  },
                  "typeName": {
                    "id": 1200,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1199,
                      "name": "IAccount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1457,
                      "src": "6993:8:5"
                    },
                    "referencedDeclaration": 1457,
                    "src": "6993:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccount_$1457",
                      "typeString": "contract IAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6992:10:5"
            },
            "scope": 1227,
            "src": "6892:300:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1228,
        "src": "343:6852:5"
      }
    ],
    "src": "33:7164:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9f7bD2f672Eca1DE9aAC5205FBFf20B8a38F0E5d",
      "transactionHash": "0x99beced7446d2b2e279537b493071e87104c0aa157cf15dc870ce2c38cd9a39e"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-22T22:13:50.919Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Este contrato permite la gestión de cuentas de activos y resultados.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor que establece el propietario del contrato."
      },
      "createAssetAccount(address,string)": {
        "details": "Crea una nueva instancia de AssetAccount y la almacena en el mapping.",
        "params": {
          "_accountAddress": "La dirección que se utilizará como clave para la cuenta.",
          "_accountName": "El nombre de la cuenta."
        }
      },
      "createLiabilityAccount(address,string)": {
        "details": "Crea una nueva instancia de LiabilityAccount y la almacena en el mapping.",
        "params": {
          "_accountAddress": "La dirección que se utilizará como clave para la cuenta.",
          "_accountName": "El nombre de la cuenta."
        }
      },
      "createResultAccount(address,string,bool)": {
        "details": "Crea una nueva instancia de ResultAccount y la almacena en el mapping.",
        "params": {
          "_accountAddress": "La dirección que se utilizará como clave para la cuenta.",
          "_accountName": "El nombre de la cuenta.",
          "_isExpense": "Indica si la cuenta es de gastos o ingresos."
        }
      },
      "getAccountDetails(address)": {
        "details": "Retorna la dirección del contrato de la cuenta y el tipo de cuenta.",
        "params": {
          "_accountAddress": "La dirección de la cuenta a consultar."
        },
        "returns": {
          "_0": "La dirección del contrato de la cuenta y el tipo de cuenta."
        }
      },
      "getAccountInstance(address)": {
        "details": "Retorna la instancia del contrato de una cuenta específica.",
        "params": {
          "_accountAddress": "Direccion asociada a la cuenta contable"
        },
        "returns": {
          "_0": "La dirección del contrato de la cuenta."
        }
      },
      "getAllAccountDetails()": {
        "details": "Retorna un array de direcciones de cuentas de activos o pasivos o resultados según el parámetro.",
        "returns": {
          "_0": "Un array de direcciones de cuentas y un array de tipos de cuentas."
        }
      },
      "updateAccountName(address,string)": {
        "details": "Actualiza el nombre de la cuenta en la instancia del contrato de la cuenta.",
        "params": {
          "_accountAddress": "La dirección de la cuenta a actualizar.",
          "_newAccountName": "El nuevo nombre para la cuenta."
        }
      }
    },
    "title": "AccountingSystem",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createAssetAccount(address,string)": {
        "notice": "Crea una nueva cuenta de activos."
      },
      "createLiabilityAccount(address,string)": {
        "notice": "Crea una nueva cuenta de Pasivo."
      },
      "createResultAccount(address,string,bool)": {
        "notice": "Crea una nueva cuenta de resultados."
      },
      "getAccountDetails(address)": {
        "notice": "Obtiene los detalles de una cuenta específica."
      },
      "getAccountInstance(address)": {
        "notice": "Obtiene la instancia del contrato de una cuenta."
      },
      "getAllAccountDetails()": {
        "notice": "Obtiene todas las direcciones de cuentas de activos o pasivos o resultados."
      },
      "updateAccountName(address,string)": {
        "notice": "Actualiza el nombre de una cuenta."
      }
    },
    "version": 1
  }
}